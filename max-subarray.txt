#include<iostream>
using namespace std;
#define MIN -99999999
#define LEN 10000

struct arr
{
	int left;
	int right;
	int sum;
};

arr *cross_max_subarray(int *A,int p,int q,int r)
{
	int sum = 1, left_sum = MIN, right_sum = MIN;//sum=0
	int max_left,max_right;
	int i, j;
	arr *t;
	t = (arr *)malloc(sizeof(arr));

	for (i = q; i >= p; i--)
	{
		sum *= A[i];
		if (sum > left_sum)
		{
			left_sum = sum;
			max_left = i;
		}
	}

	sum = 1;//sum=0;
	for (i = q+1; i <= r; i++)
	{
		sum *= A[i];
		if (sum > right_sum)
		{
			right_sum = sum;
			max_right = i;
		}
	}
	t->left = max_left;
	t->right = max_right;
	t->sum = left_sum * right_sum;//t->sum = left_sum + right_sum;

	return t;
}

arr *max(arr *a, arr *b)
{
	if (a->sum > b->sum)
		return a;
	else
		return b;
}

arr *max_subarray(int *A, int p, int r)
{
	arr *t;
	t = (arr *)malloc(sizeof(arr));
	int l = r - p + 1;
	if (l <= 1)
	{
		t->left = p;
		t->right = r;
		t->sum = A[r];
		return t;
	}
	arr *left, *right,*cross;
	int q=(p+r)/2;
	left=max_subarray(A, p, q);
	right = max_subarray(A, q + 1, r);
	cross = cross_max_subarray(A, p, q, r);
	return max(left, max(right, cross));
}

int main()
{
	int a[LEN],n;
	cin >> n;

	for (int i = 1; i <= n; i++)
	{
		cin >> a[i];
	}
	arr *m;
	m = (arr *)malloc(sizeof(arr));
	m = max_subarray(a, 1, n);
	return 0;
}